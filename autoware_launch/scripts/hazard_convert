#!/usr/bin/env python3

from autoware_auto_system_msgs.msg import HazardStatusStamped
import rclpy
from rclpy.node import Node
from std_msgs.msg import Bool


class EmergencyPublisher(Node):
    def __init__(self):
        super().__init__("hazard_convert")
        profile = rclpy.qos.QoSProfile(depth=1)
        self.subscriber = self.create_subscription(
            HazardStatusStamped,
            "/system/emergency/hazard_status",
            self.hazard_status_callback,
            profile,
        )
        self.em_publisher = self.create_publisher(Bool, "/emergency_status", 10)
        self.em_hold_publisher = self.create_publisher(Bool, "/emergency_hold_status", 10)

    def hazard_status_callback(self, msg):
        em_msg = Bool()
        em_hold_msg = Bool()
        em_msg.data = msg.status.emergency
        em_hold_msg.data = msg.status.emergency_holding
        self.em_publisher.publish(em_msg)
        self.em_hold_publisher.publish(em_hold_msg)


def main(args=None):
    rclpy.init(args=args)

    node = EmergencyPublisher()

    while rclpy.ok():
        rclpy.spin(node)

    node.destroy_node()
    rclpy.shutdown()


if __name__ == "__main__":
    main()
