<launch>
  <!-- common param -->
  <arg name="common_param_path"/>

  <!-- pointcloud container -->
  <arg name="use_pointcloud_container"/>
  <arg name="pointcloud_container_name"/>
  <arg name="cruise_planner_type"/>
  <arg name="disuse_foa" />
  <arg name="use_perfect_lane_change" />

  <!-- lane_driving scenario -->
  <group>
    <push-ros-namespace namespace="lane_driving"/>
    <!-- behavior planning module -->
    <group>
      <push-ros-namespace namespace="behavior_planning"/>
      <include file="$(find-pkg-share planning_launch)/launch/scenario_planning/lane_driving/behavior_planning/behavior_planning.launch.py">
        <arg name="use_multithread" value="true" />
        <arg name="use_pointcloud_container" value="$(var use_pointcloud_container)"/>
        <arg name="container_name" value="$(var pointcloud_container_name)"/>
      </include>
      <let name="rtc_auto_mode_manager_param_path" value="$(find-pkg-share planning_launch)/config/scenario_planning/lane_driving/behavior_planning/rtc_auto_mode_manager/rtc_auto_mode_manager.param.yaml" if="$(var disuse_foa)"/>
      <let name="rtc_auto_mode_manager_param_path" value="$(find-pkg-share planning_launch)/config/scenario_planning/lane_driving/behavior_planning/rtc_auto_mode_manager/rtc_auto_mode_manager_foa.param.yaml" unless="$(var disuse_foa)"/>
      <include file="$(find-pkg-share rtc_auto_mode_manager)/launch/rtc_auto_mode_manager.launch.xml">
        <arg name="param_path" value="$(var rtc_auto_mode_manager_param_path)"/>
      </include>
    </group>

    <!-- motion planning module -->
    <group>
      <push-ros-namespace namespace="motion_planning"/>
      <include file="$(find-pkg-share planning_launch)/launch/scenario_planning/lane_driving/motion_planning/motion_planning.launch.py">
        <arg name="use_multithread" value="true" />
        <arg name="cruise_planner_type" value="$(var cruise_planner_type)" />
      </include>
    </group>
  </group>
</launch>
